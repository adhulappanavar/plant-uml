@startuml
footer IRIS AZURE Architecture Plant-UML

!define LIGHTORANGE
!includeurl https://raw.githubusercontent.com/adhulappanavar/plant-uml/master/styles/style.puml


' Azure
!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/release/2-1/dist
!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/AzureSimplified.puml

!includeurl AzurePuml/Compute/AzureAppService.puml
!includeurl AzurePuml/Compute/AzureBatch.puml
!includeurl AzurePuml/Containers/AzureContainerRegistry.puml
!includeurl AzurePuml/Containers/AzureKubernetesService.puml
!includeurl AzurePuml/Databases/AzureDatabaseForPostgreSQL.puml
!includeurl AzurePuml/Databases/AzureCosmosDb.puml
!includeurl AzurePuml/Databases/AzureSqlDatabase.puml
!includeurl AzurePuml/Identity/AzureActiveDirectory.puml
!includeurl AzurePuml/Networking/AzureLoadBalancer.puml
!includeurl AzurePuml/Security/AzureKeyVault.puml
!includeurl AzurePuml/Storage/AzureBlobStorage.puml
!includeurl AzurePuml/Storage/AzureStorage.puml
!includeurl AzurePuml/Management/AzureResourceGroups.puml
!includeurl AzurePuml/Management/AzureLogAnalytics.puml
!includeurl AzurePuml/Networking/AzureTrafficManager.puml


left to right direction

' Azure Components

package "Geo" as geo1 {
      AzureTrafficManager(atm, "Azure traffic Manager", "")
      component "<color:blue><$AzureTrafficManager{scale=0.5}></color>"

      package "Region 1" as region1 {
        package "Vnet Hub" as vnethub {
          AzureContainerRegistry(acr_h1, "Azure Container Registry", "")
          AzureKeyVault(akv_h1, "Azure Key valut", "")
          AzureLogAnalytics(laws_h1, "Azure Log analytics Manager", "")
        }

        package "Vnet Spoke 1" as vnetspoke1 {
          AzureLogAnalytics(laws_s1, "Azure Log analytics Manager", "")
          AzureKeyVault(akv_s1, "Azure Key valut", "")
          package "Kubernetes S1" as k8spoke1 {
            AzureKubernetesService(aks_s2, "Azure Kubernetes", "")
            package "Microservice1 S1" as ms1spoke1 {
            }
          }
        }

        package "Vnet Spoke 2" as vnetspoke2 {
          AzureLogAnalytics(laws_s2, "Azure Log analytics Manager", "")
          AzureKeyVault(akv_s2, "Azure Key valut", "")
          package "Kubernetes S2" as k8spoke2 {
            AzureKubernetesService(aks_s2, "Azure Kubernetes", "")
            package "Microservice1 S2" as ms1spoke2 {
            }
          }
        }

         
      }
}

atm <--> vnethub
vnethub <--> vnetspoke1 : 1. network
vnethub <--> vnetspoke2 : 2. network
@enduml